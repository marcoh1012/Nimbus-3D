{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = \"http://api.thingiverse.com\";\n\nclass ThingiverseApi {\n  static async request(endpoint, paramsOrData = {}, verb = \"get\") {\n    let access_token = window.localStorage.getItem('access_token'); // paramsOrData._token = token\n    //( for now, hardcode token for \"testing\"\n    // \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc\" +\n    // \"3RpbmciLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU1MzcwMzE1M30.\" +\n    // \"COmFETEsTxN_VfIlgIKw0bYJLkvbRQNgO1XCSE8NZ0U\");\n\n    console.debug(\"API Call:\", endpoint, paramsOrData, verb);\n\n    try {\n      return (await axios({\n        method: verb,\n        url: `${BASE_URL}/${endpoint}`,\n        headers: {\n          \"access_token\": access_token\n        },\n        [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData\n      })).data; // axios sends query string data via the \"params\" key,\n      // and request body data via the \"data\" key,\n      // so the key we need depends on the HTTP verb\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getAll(handle) {\n    let res = await axios.get(`${BASE_URL}/${handle}`);\n    return res.data[handle];\n  } // static async searchCompanies(name){\n  //   let res = await this.request(`companies`, {name})\n  //   return res.companies\n  // }\n  // static async searchJobs(title){\n  //   let res = await this.request(`jobs`, {title})\n  //   return res.jobs\n  // }\n  // static async get(type, handle) {\n  //   let res = await this.request(`${type}/${handle}`);\n  //   return res.company;\n  // }\n  // static async logIn(data){\n  //     let res = await this.request('auth/token', data, 'post')\n  //     localStorage.setItem('_token', res.token)\n  //     return res.token\n  // }\n  // static async register(data){\n  //   let res = await this.request('auth/register', data, 'post')\n  //   localStorage.setItem('_token', res.token)\n  //   return res.token\n  // }\n  // static logout(){\n  //   localStorage.removeItem('_token')\n  // }\n  // static async getUser(username){\n  //   let res = await this.request(`users/${username}`)\n  //   return res.user\n  // }\n  // static async update(username, data){\n  //   let res = await this.request(`users/${username}`, data, 'patch')\n  //   return res.user\n  // }\n  // static async apply(username, id){\n  //   let res = await this.request(`users/${username}/jobs/${id}`,{}, \"post\");\n  //   return res;\n  // }\n  // static async getAppliedJobs(username){\n  //   let res = await this.request(`users/${username}`)\n  //   return res.user.applications\n  // }\n\n\n}\n\nexport default ThingiverseApi;","map":{"version":3,"sources":["/home/marcoh1012/Documents/SpringBoard/Capstone_2/nimbus3d/src/ThingiverseApi.js"],"names":["axios","BASE_URL","ThingiverseApi","request","endpoint","paramsOrData","verb","access_token","window","localStorage","getItem","console","debug","method","url","headers","data","err","error","response","message","Array","isArray","getAll","handle","res","get"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,MAAMC,QAAQ,GAAG,4BAAjB;;AAEA,MAAMC,cAAN,CAAqB;AACjB,eAAaC,OAAb,CAAqBC,QAArB,EAA+BC,YAAY,GAAG,EAA9C,EAAkDC,IAAI,GAAG,KAAzD,EAAgE;AAC9D,QAAIC,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAAnB,CAD8D,CAGhE;AAGE;AACA;AACA;AACA;;AAEAC,IAAAA,OAAO,CAACC,KAAR,CAAc,WAAd,EAA2BR,QAA3B,EAAqCC,YAArC,EAAmDC,IAAnD;;AAEA,QAAI;AACF,aAAO,CAAC,MAAMN,KAAK,CAAC;AAClBa,QAAAA,MAAM,EAAEP,IADU;AAElBQ,QAAAA,GAAG,EAAG,GAAEb,QAAS,IAAGG,QAAS,EAFX;AAGlBW,QAAAA,OAAO,EAAE;AAAC,0BAAiBR;AAAlB,SAHS;AAIlB,SAACD,IAAI,KAAK,KAAT,GAAiB,QAAjB,GAA4B,MAA7B,GAAsCD;AAJpB,OAAD,CAAZ,EAIiDW,IAJxD,CADE,CAMA;AACA;AACA;AACH,KATD,CAWA,OAAMC,GAAN,EAAW;AACTN,MAAAA,OAAO,CAACO,KAAR,CAAc,YAAd,EAA4BD,GAAG,CAACE,QAAhC;AACA,UAAIC,OAAO,GAAGH,GAAG,CAACE,QAAJ,CAAaH,IAAb,CAAkBI,OAAhC;AACA,YAAMC,KAAK,CAACC,OAAN,CAAcF,OAAd,IAAyBA,OAAzB,GAAmC,CAACA,OAAD,CAAzC;AACD;AACF;;AAED,eAAaG,MAAb,CAAoBC,MAApB,EAA2B;AACzB,QAAIC,GAAG,GAAG,MAAMzB,KAAK,CAAC0B,GAAN,CAAW,GAAEzB,QAAS,IAAGuB,MAAO,EAAhC,CAAhB;AACA,WAAOC,GAAG,CAACT,IAAJ,CAASQ,MAAT,CAAP;AACD,GAnCgB,CAqCjB;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AAEA;AACA;AACA;AAEA;;;AA5FiB;;AA+FnB,eAAetB,cAAf","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"http://api.thingiverse.com\"\n\nclass ThingiverseApi {\n    static async request(endpoint, paramsOrData = {}, verb = \"get\") {\n      let access_token = window.localStorage.getItem('access_token')\n      \n    // paramsOrData._token = token\n\n      \n      //( for now, hardcode token for \"testing\"\n      // \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc\" +\n      // \"3RpbmciLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU1MzcwMzE1M30.\" +\n      // \"COmFETEsTxN_VfIlgIKw0bYJLkvbRQNgO1XCSE8NZ0U\");\n  \n      console.debug(\"API Call:\", endpoint, paramsOrData, verb);\n  \n      try {\n        return (await axios({\n          method: verb,\n          url: `${BASE_URL}/${endpoint}`,\n          headers: {\"access_token\" : access_token},\n          [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData})).data;\n          // axios sends query string data via the \"params\" key,\n          // and request body data via the \"data\" key,\n          // so the key we need depends on the HTTP verb\n      }\n  \n      catch(err) {\n        console.error(\"API Error:\", err.response);\n        let message = err.response.data.message;\n        throw Array.isArray(message) ? message : [message];\n      }\n    }\n\n    static async getAll(handle){\n      let res = await axios.get(`${BASE_URL}/${handle}`)\n      return res.data[handle]\n    }\n\n    // static async searchCompanies(name){\n    //   let res = await this.request(`companies`, {name})\n    //   return res.companies\n    // }\n\n    // static async searchJobs(title){\n    //   let res = await this.request(`jobs`, {title})\n    //   return res.jobs\n    // }\n\n  \n    // static async get(type, handle) {\n    //   let res = await this.request(`${type}/${handle}`);\n    //   return res.company;\n    // }\n\n\n    // static async logIn(data){\n    //     let res = await this.request('auth/token', data, 'post')\n    //     localStorage.setItem('_token', res.token)\n    //     return res.token\n    // }\n\n\n    // static async register(data){\n    //   let res = await this.request('auth/register', data, 'post')\n    //   localStorage.setItem('_token', res.token)\n    //   return res.token\n    // }\n\n    // static logout(){\n    //   localStorage.removeItem('_token')\n    // }\n\n    // static async getUser(username){\n    //   let res = await this.request(`users/${username}`)\n    //   return res.user\n    // }\n\n    // static async update(username, data){\n    //   let res = await this.request(`users/${username}`, data, 'patch')\n     \n    //   return res.user\n    // }\n\n    // static async apply(username, id){\n    //   let res = await this.request(`users/${username}/jobs/${id}`,{}, \"post\");\n    //   return res;\n\n    // }\n\n    // static async getAppliedJobs(username){\n    //   let res = await this.request(`users/${username}`)\n    //   return res.user.applications\n\n    // }\n  }\n\n  export default ThingiverseApi"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import axios from 'axios';\nconst BASE_URL = \"https://api.thingiverse.com\";\n\nclass ThingiverseApi {\n  static async request(endpoint, paramsOrData = {}, verb = \"get\") {\n    let auth = JSON.parse(window.localStorage.getItem('persist:root')).auth;\n    let access_token = JSON.parse(auth).access_token; // paramsOrData._token = token\n    //( for now, hardcode token for \"testing\"\n    // \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc\" +\n    // \"3RpbmciLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU1MzcwMzE1M30.\" +\n    // \"COmFETEsTxN_VfIlgIKw0bYJLkvbRQNgO1XCSE8NZ0U\");\n\n    console.log(\"API Call:\", endpoint, paramsOrData, verb);\n\n    try {\n      return (await axios({\n        method: verb,\n        url: `${BASE_URL}/${endpoint}`,\n        headers: {\n          \"Authorization\": 'Bearer ' + access_token\n        },\n        [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData\n      })).data; // axios sends query string data via the \"params\" key,\n      // and request body data via the \"data\" key,\n      // so the key we need depends on the HTTP verb\n    } catch (err) {\n      console.error(\"API Error:\", err.response);\n      let message = err.response.data.message;\n      throw Array.isArray(message) ? message : [message];\n    }\n  }\n\n  static async getAll(handle, days = 7) {\n    let res = await this.request('search', {\n      page: 1,\n      per_page: 30,\n      sort: 'popular',\n      posted_after: `now-${days}d`,\n      type: 'thing'\n    });\n    console.log(res);\n    return res; // https://www.thingiverse.com/search?page=2&per_page=20&sort=popular&posted_after=now-30d&type=things&q=\n  }\n\n  static async getCategories() {\n    let res = await this.request('categories');\n    return res;\n  }\n\n  static async getFeatured() {\n    let res = await this.request('search', {\n      \"is_featured\": 1\n    });\n    return res;\n  }\n\n  static async getLikes() {\n    let res = await this.request(`users/marcoh1012/likes`);\n    return res;\n  }\n\n  static async getModel(id) {\n    let res = await this.request(`things/${id}`);\n    return res;\n  }\n\n  static async likeModel(id) {\n    //add like to model\n    let res = await this.request(`things/${id}/likes`, {}, 'post');\n    return res;\n  }\n\n  static async unlikeModel(id) {\n    //unlike a model that was already liked.\n    let res = await this.request(`things/${id}/likes`, {}, 'delete');\n    return res;\n  }\n\n  static async getFiles(id) {\n    //get all files from the model\n    let res = await this.request(`things/${id}/files`);\n    return res;\n  }\n\n  static async getComments(id) {\n    //get all comments from model\n    let res = await this.request(`things/${id}/comments`);\n    return res;\n  }\n\n}\n\nexport default ThingiverseApi;","map":{"version":3,"sources":["/home/marcoh1012/Documents/SpringBoard/Capstone_2/nimbus3d/src/ThingiverseApi.js"],"names":["axios","BASE_URL","ThingiverseApi","request","endpoint","paramsOrData","verb","auth","JSON","parse","window","localStorage","getItem","access_token","console","log","method","url","headers","data","err","error","response","message","Array","isArray","getAll","handle","days","res","page","per_page","sort","posted_after","type","getCategories","getFeatured","getLikes","getModel","id","likeModel","unlikeModel","getFiles","getComments"],"mappings":"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","sourcesContent":["import axios from 'axios';\n\nconst BASE_URL = \"https://api.thingiverse.com\"\n\nclass ThingiverseApi {\n    static async request(endpoint, paramsOrData = {}, verb = \"get\") {\n      let auth = JSON.parse(window.localStorage.getItem('persist:root')).auth\n      let access_token = JSON.parse(auth).access_token\n      \n    // paramsOrData._token = token\n\n      \n      //( for now, hardcode token for \"testing\"\n      // \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6InRlc\" +\n      // \"3RpbmciLCJpc19hZG1pbiI6ZmFsc2UsImlhdCI6MTU1MzcwMzE1M30.\" +\n      // \"COmFETEsTxN_VfIlgIKw0bYJLkvbRQNgO1XCSE8NZ0U\");\n  \n      console.log(\"API Call:\", endpoint, paramsOrData, verb);\n  \n      try {\n        return (await axios({\n          method: verb,\n          url: `${BASE_URL}/${endpoint}`,\n          headers: {\"Authorization\" : 'Bearer ' + access_token},\n          [verb === \"get\" ? \"params\" : \"data\"]: paramsOrData})).data;\n          // axios sends query string data via the \"params\" key,\n          // and request body data via the \"data\" key,\n          // so the key we need depends on the HTTP verb\n      }\n  \n      catch(err) {\n        console.error(\"API Error:\", err.response);\n        let message = err.response.data.message;\n        throw Array.isArray(message) ? message : [message];\n      }\n    }\n\n    static async getAll(handle,days=7){\n      let res = await this.request('search',{\n        page:1,\n        per_page:30,\n        sort: 'popular',\n        posted_after: `now-${days}d`,\n        type: 'thing'\n      })\n      console.log(res)\n      return res\n      // https://www.thingiverse.com/search?page=2&per_page=20&sort=popular&posted_after=now-30d&type=things&q=\n    }\n\n    static async getCategories(){\n      let res = await this.request('categories')\n      return res\n    }\n\n    static async getFeatured(){\n      let res = await this.request('search',{\"is_featured\":1})\n      return res\n    }\n\n    static async getLikes(){\n      let res = await this.request(`users/marcoh1012/likes`)\n      return res\n    }\n\n    static async getModel(id){\n      let res = await this.request(`things/${id}`)\n      return res\n    }\n\n    static async likeModel(id){\n      //add like to model\n      let res = await this.request(`things/${id}/likes`,{}, 'post')\n      return res\n    }\n\n    static async unlikeModel(id){\n      //unlike a model that was already liked.\n      let res = await this.request(`things/${id}/likes`, {},'delete')\n      return res\n    }\n\n    static async getFiles(id){\n      //get all files from the model\n      let res = await this.request(`things/${id}/files`)\n      return res\n    }\n\n    static async getComments(id){\n      //get all comments from model\n      let res = await this.request(`things/${id}/comments`)\n      return res\n    }\n  }\n\n  export default ThingiverseApi"]},"metadata":{},"sourceType":"module"}
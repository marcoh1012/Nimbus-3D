{"ast":null,"code":"import { GET_LIKED, GET_USER, LIKE_MODEL, LOG_IN, LOG_OUT, UNLIKE_MODEL, USER_INFO } from \"../actions/types\";\nconst INITIAL_STATE = {};\n\nfunction users(state = INITIAL_STATE, action) {\n  switch (action.type) {\n    case LOG_IN:\n      return { ...state,\n        \"access_token\": action.payload\n      };\n\n    case LOG_OUT:\n      return { ...INITIAL_STATE\n      };\n\n    case GET_LIKED:\n      return { ...state,\n        'liked': action.payload\n      };\n\n    case LIKE_MODEL:\n      return { ...state,\n        'liked': [...state.liked, { ...action.payload\n        }]\n      };\n\n    case UNLIKE_MODEL:\n      return { ...state,\n        'liked': state.liked.filter(thing => thing.id !== action.payload.id)\n      };\n\n    case USER_INFO:\n      return { ...state,\n        info: { ...action.payload\n        }\n      };\n\n    case GET_USER:\n      return { ...state,\n        user: { ...action.payload.user\n        },\n        user_things: [...action.payload.things]\n      };\n\n    default:\n      return state;\n  }\n}\n\nexport default users;","map":{"version":3,"sources":["/home/marcoh1012/Documents/SpringBoard/Capstone_2/nimbus3d/src/reducers/users.js"],"names":["GET_LIKED","GET_USER","LIKE_MODEL","LOG_IN","LOG_OUT","UNLIKE_MODEL","USER_INFO","INITIAL_STATE","users","state","action","type","payload","liked","filter","thing","id","info","user","user_things","things"],"mappings":"AAAA,SAAQA,SAAR,EAAmBC,QAAnB,EAA6BC,UAA7B,EAAyCC,MAAzC,EAAiDC,OAAjD,EAA0DC,YAA1D,EAAwEC,SAAxE,QAAwF,kBAAxF;AAGA,MAAMC,aAAa,GAAG,EAAtB;;AAEA,SAASC,KAAT,CAAeC,KAAK,GAAGF,aAAvB,EAAsCG,MAAtC,EAA8C;AAC1C,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKR,MAAL;AACE,aAAO,EAAC,GAAGM,KAAJ;AACH,wBAAgBC,MAAM,CAACE;AADpB,OAAP;;AAIF,SAAKR,OAAL;AACE,aAAO,EAAE,GAAGG;AAAL,OAAP;;AAEF,SAAKP,SAAL;AACI,aAAM,EAAC,GAAGS,KAAJ;AACN,iBAASC,MAAM,CAACE;AADV,OAAN;;AAIJ,SAAKV,UAAL;AACI,aAAO,EAAC,GAAGO,KAAJ;AAAW,iBAAS,CACzB,GAAGA,KAAK,CAACI,KADgB,EACT,EAAC,GAAGH,MAAM,CAACE;AAAX,SADS;AAApB,OAAP;;AAIJ,SAAKP,YAAL;AACI,aAAM,EAAC,GAAGI,KAAJ;AAAW,iBACfA,KAAK,CAACI,KAAN,CAAYC,MAAZ,CAAmBC,KAAK,IAAIA,KAAK,CAACC,EAAN,KAAaN,MAAM,CAACE,OAAP,CAAeI,EAAxD;AADI,OAAN;;AAIJ,SAAKV,SAAL;AACE,aAAM,EAAC,GAAGG,KAAJ;AACJQ,QAAAA,IAAI,EAAE,EAAC,GAAGP,MAAM,CAACE;AAAX;AADF,OAAN;;AAIF,SAAKX,QAAL;AACE,aAAM,EAAC,GAAGQ,KAAJ;AACJS,QAAAA,IAAI,EAAE,EAAC,GAAGR,MAAM,CAACE,OAAP,CAAeM;AAAnB,SADF;AAEJC,QAAAA,WAAW,EAAE,CAAC,GAAGT,MAAM,CAACE,OAAP,CAAeQ,MAAnB;AAFT,OAAN;;AAKF;AACE,aAAOX,KAAP;AApCJ;AAsCD;;AAED,eAAeD,KAAf","sourcesContent":["import {GET_LIKED, GET_USER, LIKE_MODEL, LOG_IN, LOG_OUT, UNLIKE_MODEL, USER_INFO} from \"../actions/types\";\n\n\nconst INITIAL_STATE = {};\n\nfunction users(state = INITIAL_STATE, action) {\n    switch (action.type) {\n      case LOG_IN:\n        return {...state,\n            \"access_token\": action.payload\n        };\n  \n      case LOG_OUT:\n        return { ...INITIAL_STATE };\n\n      case GET_LIKED:\n          return{...state,\n          'liked': action.payload\n        };\n      \n      case LIKE_MODEL:\n          return {...state, 'liked': [\n            ...state.liked, {...action.payload}\n          ]};\n\n      case UNLIKE_MODEL:\n          return{...state, 'liked': \n            state.liked.filter(thing => thing.id !== action.payload.id)\n          }\n\n      case USER_INFO:\n        return{...state, \n          info: {...action.payload}\n        }\n\n      case GET_USER:\n        return{...state,\n          user: {...action.payload.user},\n          user_things: [...action.payload.things]\n        }\n\n      default:\n        return state;\n    }\n  }\n  \n  export default users;"]},"metadata":{},"sourceType":"module"}